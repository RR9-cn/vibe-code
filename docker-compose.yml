version: '3.8'

services:
  # RedisStack服务 - 包含Redis + RedisJSON + RediSearch + RedisGraph
  redis-stack:
    image: redis/redis-stack:latest
    container_name: resume-generator-redis
    ports:
      - "6379:6379"      # Redis端口
      - "8001:8001"      # RedisInsight Web UI端口
    volumes:
      - redis_data:/data
    environment:
      - REDIS_ARGS=--save 60 1000 --appendonly yes
    networks:
      - resume-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端FastAPI服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resume-generator-backend
    ports:
      - "8000:8000"
    depends_on:
      redis-stack:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis-stack:6379
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - DEBUG=False
    volumes:
      - ./backend:/app
      - uploaded_files:/app/uploads
      - generated_websites:/app/websites
    networks:
      - resume-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端Vue服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: resume-generator-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - resume-network
    restart: unless-stopped

# 数据卷定义
volumes:
  redis_data:
    driver: local
  uploaded_files:
    driver: local
  generated_websites:
    driver: local

# 网络定义
networks:
  resume-network:
    driver: bridge